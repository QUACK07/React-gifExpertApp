{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/Gifgrid.js","hooks/useFetchGifs.js","GiffExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","Gifgrid","loading","state","setstate","useEffect","then","imgs","UseFetchGifs","GiffExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBQ,QAAQC,MACRX,EAAcE,EAAEU,OAAOJ,a,+BCPlBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,4BAAKA,QCHJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAAEA,GAAc,IAAD,EACbhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAiBvC,OAXAC,qBAAW,WACRxB,EAASC,GACPwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGlB,CAACpB,IAGIqB,EDb0BK,CAAa1B,GAAjCa,EADsB,EAC3BN,KAAaa,EADc,EACdA,QAGrB,OACI,qCACA,oBAAIJ,UAAU,wCAAd,SAAwDhB,IACvDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACX,qBAAKA,UAAU,YAAf,SAEWH,EAAOJ,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,eAGFA,GAFEA,EAAIC,aEbtBgB,EAAgB,WAAM,MAEK3C,mBAAS,CAAC,cAFf,mBAExB4C,EAFwB,KAEZ7C,EAFY,KAU/B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWnB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEIA,SAAUA,GADHA,Y,MCfnC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.38ae01a1.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) =>{\r\n        console.log();\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log('submit echo');\r\n        if( inputValue.trim().length >2 ){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n       \r\n    };\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"Text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            ></input>  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","export const getGifs = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=YEr2caiVxhSZLgjZHvhTK5ZG8ODdEFCT`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n    //console.log(gifs);\r\n    //setimages( gifs );\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    //console.log(props);\r\n    //console.log({ id,title,url });\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={ url } alt= { title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","//import React, { useState, useEffect } from 'react'\r\nimport React from 'react';\r\nimport { UseFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const Gifgrid = ({category}) => {\r\n    const { data:images, loading } = UseFetchGifs(category);\r\n   \r\n    //getGifs();\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeInDown\">{ category }</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">loading</p>}\r\n        {<div className=\"card-grid\" >\r\n                {\r\n                    images.map((img) => {\r\n                        return <GifGridItem \r\n                        key= { img.id }\r\n                        //img= { img }/>\r\n                        { ...img } /> \r\n                    })\r\n                }\r\n            \r\n        </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect }from 'react';\r\nimport { getGifs } from '../helpers/GetGifs';\r\nexport const UseFetchGifs = ( category ) =>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n       getGifs( category )\r\n        .then( imgs => {\r\n            setstate({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n        });\r\n    },[category] );\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { Gifgrid } from './components/Gifgrid';\r\n\r\nexport const GiffExpertApp = () => {\r\n    //const categories = ;\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    //const handleAdd = ()=>{\r\n       //setCategories( ['prueba', ...categories] );\r\n        //setCategories(cats => [...cats, 'HunterxHunter']);\r\n    //}\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} /> \r\n            <hr /> \r\n             \r\n            <ol>\r\n                {\r\n                    categories.map( (category) =>  \r\n                        <Gifgrid \r\n                            key = {category} \r\n                            category={category} \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GiffExpertApp } from './GiffExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GiffExpertApp  />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}